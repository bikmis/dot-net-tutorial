//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyMVCAppWithDotNet.WriterServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/MyWcfServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WriterServiceReference.IWriterService")]
    public interface IWriterService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriterService/GetWriter", ReplyAction="http://tempuri.org/IWriterService/GetWriterResponse")]
        string GetWriter(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriterService/GetWriter", ReplyAction="http://tempuri.org/IWriterService/GetWriterResponse")]
        System.Threading.Tasks.Task<string> GetWriterAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriterService/GetBooks", ReplyAction="http://tempuri.org/IWriterService/GetBooksResponse")]
        MyMVCAppWithDotNet.WriterServiceReference.Book[] GetBooks(string writer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriterService/GetBooks", ReplyAction="http://tempuri.org/IWriterService/GetBooksResponse")]
        System.Threading.Tasks.Task<MyMVCAppWithDotNet.WriterServiceReference.Book[]> GetBooksAsync(string writer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWriterServiceChannel : MyMVCAppWithDotNet.WriterServiceReference.IWriterService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WriterServiceClient : System.ServiceModel.ClientBase<MyMVCAppWithDotNet.WriterServiceReference.IWriterService>, MyMVCAppWithDotNet.WriterServiceReference.IWriterService {
        
        public WriterServiceClient() {
        }
        
        public WriterServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WriterServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WriterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WriterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetWriter(string name) {
            return base.Channel.GetWriter(name);
        }
        
        public System.Threading.Tasks.Task<string> GetWriterAsync(string name) {
            return base.Channel.GetWriterAsync(name);
        }
        
        public MyMVCAppWithDotNet.WriterServiceReference.Book[] GetBooks(string writer) {
            return base.Channel.GetBooks(writer);
        }
        
        public System.Threading.Tasks.Task<MyMVCAppWithDotNet.WriterServiceReference.Book[]> GetBooksAsync(string writer) {
            return base.Channel.GetBooksAsync(writer);
        }
    }
}
